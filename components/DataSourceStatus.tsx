'use client'

import { Badge } from '../src/components/ui/badge'
import { Card, CardContent, CardHeader, CardTitle } from '../src/components/ui/card'

interface DataSourceStatusProps {
  useSupabase: boolean
  memoryStats: { bookings: number, customers: number }
  supabaseStats: { bookings: number, customers: number }
  loading?: boolean
}

export function DataSourceStatus({ 
  useSupabase, 
  memoryStats, 
  supabaseStats, 
  loading = false 
}: DataSourceStatusProps) {
  return (
    <Card className="w-full max-w-2xl">
      <CardHeader>
        <CardTitle className="flex items-center gap-2">
          📊 Data Source Status
          {loading && <span className="text-sm text-gray-500">(Loading...)</span>}
        </CardTitle>
      </CardHeader>
      <CardContent className="space-y-4">
        
        {/* Current Source */}
        <div className="p-3 bg-gray-50 rounded-lg">
          <div className="flex items-center justify-between">
            <span className="font-medium">Current Data Source:</span>
            <Badge variant={useSupabase ? 'default' : 'secondary'}>
              {useSupabase ? '☁️ Supabase Database' : '🧠 In-Memory'}
            </Badge>
          </div>
          <div className="text-sm text-gray-600 mt-1">
            {useSupabase 
              ? 'Data is persistent and shared across sessions' 
              : 'Data is temporary and lost on page refresh'
            }
          </div>
        </div>

        {/* Data Comparison */}
        <div className="grid grid-cols-2 gap-4">
          <div className={`p-3 border rounded-lg ${!useSupabase ? 'bg-blue-50 border-blue-200' : ''}`}>
            <div className="flex items-center gap-2 mb-2">
              <span className="text-lg">🧠</span>
              <span className="font-medium text-sm">In-Memory Data</span>
              {!useSupabase && <Badge className="text-xs">Active</Badge>}
            </div>
            <div className="text-xs space-y-1">
              <div>Bookings: {memoryStats.bookings}</div>
              <div>Customers: {memoryStats.customers}</div>
            </div>
            <div className="text-xs text-gray-500 mt-2">
              Generated by seedMockState()
            </div>
          </div>
          
          <div className={`p-3 border rounded-lg ${useSupabase ? 'bg-green-50 border-green-200' : ''}`}>
            <div className="flex items-center gap-2 mb-2">
              <span className="text-lg">☁️</span>
              <span className="font-medium text-sm">Supabase Database</span>
              {useSupabase && <Badge className="text-xs">Active</Badge>}
            </div>
            <div className="text-xs space-y-1">
              <div>Bookings: {supabaseStats.bookings}</div>
              <div>Customers: {supabaseStats.customers}</div>
            </div>
            <div className="text-xs text-gray-500 mt-2">
              Persistent storage
            </div>
          </div>
        </div>

        {/* Warning for Supabase */}
        {useSupabase && (
          <div className="p-3 bg-yellow-50 border border-yellow-200 rounded-lg">
            <div className="flex items-center gap-2">
              <span className="text-yellow-600">⚠️</span>
              <span className="text-sm font-medium text-yellow-800">Supabase Mode Active</span>
            </div>
            <div className="text-xs text-yellow-700 mt-1">
              All new bookings and customers will be saved to the database permanently. 
              Use "Clear All Data" in Data Manager to reset for testing.
            </div>
          </div>
        )}
      </CardContent>
    </Card>
  )
}
